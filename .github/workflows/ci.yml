permissions:
  contents: read
name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install deps
        run: |
          poetry install --with dev
      - name: Install pip-audit
        run: |
          poetry run pip install pip-audit
      - name: Security audit
        run: |
          poetry run pip-audit -s osv
      - name: Format code
        run: |
          poetry run black .
          poetry run isort .
      - name: Lint & Typeâ€‘check
        run: |
          poetry run ruff check --fix .
          poetry run black --check .
          poetry run isort --check --profile black .
          poetry run mypy imednet
      - name: Unit tests
        run: |
          poetry run pytest -q --cov=imednet --cov-report=xml --cov-fail-under=90
