[project]
name = "imednet"
version = "0.2.0"
description = ""
authors = [{name = "Frederick de Ruiter", email = "127706008+fderuiter@users.noreply.github.com"}]
readme = "README.md"
license = {text = "MIT"}

[project.scripts]
imednet = "imednet.cli:app"

[tool.poetry]
name = "imednet"
version = "0.2.0"
description = "Unofficial Python SDK for the iMednet clinical trials API"
readme = "README.md"
keywords = ["imednet", "clinical trials", "sdk", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Typing :: Typed",
]
authors = ["Frederick de Ruiter <127706008+fderuiter@users.noreply.github.com>"]
maintainers = ["Frederick de Ruiter <fpderuiter@gmail.com>"]
packages = [{ include = "imednet" }]
include = [
    "README.md",
    "LICENSE",
    "imednet/py.typed",
    { path = "examples", format = "sdist" } # Include examples only in sdist
]
license = "MIT"
repository = "https://github.com/fderuiter/imednet-python-sdk"
homepage = "https://github.com/fderuiter/imednet-python-sdk"

[tool.poetry.scripts]
imednet = "imednet.cli:app"

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.32.5"
h11 = "^0.16.0"
pandas = "^2.3.2"
pyarrow = "^21.0.0"
SQLAlchemy = "^2.0.43"
openpyxl = "^3.1.5"
pydantic = "^2.11.7"
httpx = "^0.28.1"
tenacity = "^9.1.2"
python-dotenv = "^1.1.1"
typer = "^0.16.1"
python-json-logger = "^3.3.0"
urllib3 = "^2.5.0"

[tool.poetry.extras]
pandas = ["pandas"]
excel = ["pandas", "openpyxl"]
pyarrow = ["pyarrow"]
sqlalchemy = ["SQLAlchemy"]
airflow = ["apache-airflow", "apache-airflow-providers-amazon"]

[tool.poetry.group.dev.dependencies]
pandas = "^2.3.2"
black = "^25.1.0"
ruff = "^0.12.9"
mypy = "^1.17.1"
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
responses = "^0.25.8"
respx = "^0.22.0"
pytest-asyncio = "^1.1.0"
faker = "^37.5.3"
pre-commit = "^4.3.0"
types-requests = "^2.32.4.20250809"
isort = "^6.0.1"
sphinx = "^8.2.3"
sphinx-autodoc-typehints = "^3.2.0"
sphinx-rtd-theme = "^3.0.2"
boto3 = "^1.40.14"
moto = "^5.1.10"
sqlalchemy = "^2.0.43"
openpyxl = "^3.1.5"
sphinxcontrib-mermaid = "^1.0.0"
doc8 = "^2.0.0"
codespell = "^2.4.1"
requests = "^2.32.5"
h11 = "^0.16.0"
pyarrow = "^21.0.0"
tenacity = "^9.1.2"
python-dotenv = "^1.1.1"
typer = "^0.16.1"
python-json-logger = "^3.3.0"
urllib3 = "^2.5.0"
alabaster = "^1.0.0"
anyio = "^4.10.0"
certifi = "^2025.8.3"
charset-normalizer = "^3.4.3"
click = "^8.2.1"
coverage = "^7.10.4"
cryptography = "^45.0.6"
distlib = "^0.4.0"
filelock = "^3.19.1"
greenlet = "^3.2.4"
identify = "^2.6.13"
markdown-it-py = "^4.0.0"
numpy = "^2.3.2"
pbr = "^7.0.1"
platformdirs = "^4.3.8"
pluggy = "^1.6.0"
pygments = "^2.19.2"
rich = "^14.1.0"
s3transfer = "^0.13.1"
snowballstemmer = "^3.0.1"
typing-extensions = "^4.14.1"
typing-inspection = "^0.4.1"
virtualenv = "^20.34.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# ------------------------
# Formatting / lint config
# ------------------------
[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
src = ["imednet", "tests"]

[tool.ruff.lint.isort]
known-first-party = ["imednet"]

[tool.ruff.lint]
select = ["E", "F", "I", "N"]
ignore = ["D", "ANN", "S101"]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["field_validator", "model_validator"]

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["imednet"]
src_paths = ["imednet", "tests"]

[tool.doc8]
max_line_length = 400
ignore_path = ["docs/_build"]

[tool.mypy]
python_version = "3.11"
strict = false
ignore_missing_imports = true
plugins = ["pydantic.mypy"]
# ────────────────────────────────────────────────────────────────
# Ignore all files under examples/
exclude                = ['^examples/.*$', '^scripts/.*$']
