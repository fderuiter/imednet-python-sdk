[tool.poetry]
name = "imednet-sdk"
version = "0.1.0"
description = ""
authors = ["Frederick de Ruiter <127706008+fderuiter@users.noreply.github.com>"]
packages = [{ include = "imednet" }]
include = [
    "README.md",
    "LICENSE",
    { path = "examples", format = "sdist" }, # Include examples only in sdist
    { path = "examples", format = "wheel" } # Include examples also in wheel
]
license = "MIT"
repository = "https://github.com/Bright-Research/imednet-python-sdk"
homepage = "https://github.com/Bright-Research/imednet-python-sdk"

[tool.poetry.scripts]
imednet = "imednet.cli:app"
imednet-ui = "imednet.ui.desktop:run"

[tool.poetry.dependencies]
python = "^3.10"
requests = ">=2.32.3,<3.0.0"
pandas = { version = ">=2.2.3,<3.0.0", optional = true }
pydantic = "^2.11.3"
httpx = "^0.28.1"
tenacity = "^9.1.2"
python-dotenv = "^1.1.0"
typer = {extras = ["all"], version = "^0.15.2"}
cryptography = "^42.0.5"
ttkbootstrap = "^1.13.10"
tkinterdnd2 = "^0.4.3"

[tool.poetry.extras]
pandas = ["pandas"]
ui = ["cryptography"]

[tool.poetry.group.dev.dependencies]
pandas = ">=2.2.3,<3.0.0"
black = "^25.1.0"
ruff = "^0.11.6"
mypy = "^1.15.0"
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
responses = "^0.25.7"
pre-commit = "^4.2.0"
types-requests = "^2.32.0.20250328"
isort = "^6.0.1"
sphinx = "^6.2.0"
sphinx-autodoc-typehints = "*"
sphinx-rtd-theme = "^3.0.2"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# ------------------------
# Formatting / lint config
# ------------------------
[tool.black]
line-length = 100
target-version = ["py310"]

[tool.ruff]
line-length = 100
src = ["imednet"]

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["D", "ANN", "S101"]

[tool.mypy]
python_version = "3.10"
strict = false
ignore_missing_imports = true
plugins = ["pydantic.mypy"]
# ────────────────────────────────────────────────────────────────
# Ignore all files under imednet/examples/
exclude = '^imednet/examples/.*$'

[tool.mypy-imednet.utils]
strict = true

[tool.mypy-imednet.core]
strict = true

[tool.mypy-imednet.models]
strict = true

[tool.mypy-imednet.endpoints]
strict = true

[tool.mypy-imednet.workflows]
strict = true

[tool.mypy-imednet.cli]
strict = true
